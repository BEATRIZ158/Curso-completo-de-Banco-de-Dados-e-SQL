/* PROCEDURES */

--SP_ STORAGE PROCEDURE

/* CHECK é uma constraint (Restrição), garante que os dados inseridos
ou atualizados atendam a uma condição definida
*/ 


CREATE TABLE PESSOA(
	IDPESSOA INT PRIMARY KEY IDENTITY,
	NOME VARCHAR(30) NOT NULL,
	SEXO CHAR(1) NOT NULL CHECK (SEXO IN('M','F')), --ENUM
	MASCIMENTO DATE NOT NULL
)
GO

CREATE TABLE TELEFONE(
	IDTELEFONE INT NOT NULL IDENTITY,
	TIPO CHAR(3) NOT NULL CHECK ( TIPO IN('CEL','COM')),
	NUMERO CHAR(10) NOT NULL,
	ID_PESSOA INT
)
GO

ALTER TABLE TELEFONE ADD CONSTRAINT FK_TELEFONE_PESSOA
FOREIGN KEY(ID_PESSOA) REFERENCES PESSOA(IDPESSOA)
ON DELETE CASCADE
GO

INSERT INTO PESSOA VALUES('ANTONIO','M','1981-02-13')
INSERT INTO PESSOA VALUES('DANIEL','M','1985-03-18')
INSERT INTO PESSOA VALUES('CLEIDE','F','1979-10-13')
INSERT INTO PESSOA VALUES('MAFRA','M','1981-02-13')
GO

SELECT @@IDENTITY -- GUARDA O ULTIMO IDENTITY INSERIDO NA SE��O
GO

SELECT * FROM PESSOA

INSERT INTO TELEFONE VALUES('CEL','9879008',1)
INSERT INTO TELEFONE VALUES('COM','8757909',1)
INSERT INTO TELEFONE VALUES('CEL','9875890',2)
INSERT INTO TELEFONE VALUES('CEL','9347689',2)
INSERT INTO TELEFONE VALUES('COM','2998689',3)
INSERT INTO TELEFONE VALUES('COM','2098978',2)
INSERT INTO TELEFONE VALUES('CEL','9008679',3)
GO

/* CRIANDO A PROCEDURE */

CREATE PROC SOMA
AS 

    SELECT 10 + 10 AS SOMA

GO

/* EXECUÇÃO DA PROCEDURE */

SOMA

EXEC SOMA
GO

/* DINAMICAS - COM PARAMETROS 
@ -> Significa que é uma Variável LOCAL, só essa seção (Código) enxerga as vairáveis Locais
@@ ->Significa que é uma variável GLOBAL, estão disponíveis para qualquer usuário, em qualquer código
*/

CREATE PROC CONTA @NUM1 INT, @NUM2 INT 
AS
    SELECT @NUM1 + @NUM2 AS RESULTADO
GO

/* EXECUTANDO */

EXEC CONTA 90, 78
GO

/* APAGANDO A PROCEDURE */

DROP PROC CONTA
GO

/* PROCEDURES EM TABELAS */

SELECT NOME, NUMERO
FROM PESSOA
INNER JOIN TELEFONE
ON IDPESSOA = ID_PESSOA
WHERE TIPO = 'CEL'
GO

/* TRAZER OS TELEFONE DE ACORDO COM O TIPO PASSADO */

CREATE PROC TELEFONES @TIPO CHAR(3)
AS
    SELECT NOME, NUMERO
    FROM PESSOA
    INNER JOIN TELEFONE
    ON IDPESSOA = ID_PESSOA
    WHERE TIPO = @TIPO
GO

EXEC TELEFONES 'CEL'
GO

EXEC TELEFONES 'COM'
GO

/* PARAMETROS DE OUTPUT - SAIDA 
Dependendo do resultado, a PROCEDURE retorna algo
*/

SELECT TIPO, COUNT(*) AS QUANTIDADE
FROM TELEFONE
GROUP BY TIPO 
GO

/* CRIANDO PROCEDURE COM PARAMETROS DE ENTRADA E PARAMETRO DE SAIDA */

CREATE PROCEDURE GETTIPO @TIPO CHAR(3), @CONTADOR INT OUTPUT
AS
    SELECT @CONTADOR = COUNT(*)
    FROM TELEFONE
    WHERE TIPO = @TIPO
GO

/* EXECUÇÃO DA PROC COM PARAMETRO DE SAIDA 

TSQL -> TRANSACTION SQL -> Linguagem que o SQL Server Trabalha */

/* 
Declara uma variável Inteira
Executa a função GETTIPO e passa o argumento do parametro @TIPO, e Passa o argumento de @CONTADOR que também é um valor de Saída
Projeta Saida na tela
*/
DECLARE @SAIDA INT
EXEC GETTIPO @TIPO = 'CEL', @CONTADOR = @SAIDA OUTPUT
SELECT @SAIDA

-- Ou

DECLARE @SAIDA INT
EXEC GETTIPO 'CEL', @SAIDA OUTPUT
SELECT @SAIDA
GO

/* NÃO PODE! OUTPUT É OBRIGATÓRIO!

DECLARE @SAIDA INT
EXEC GETTIPO 'CEL', @SAIDA
SELECT @SAIDA
GO
*/
