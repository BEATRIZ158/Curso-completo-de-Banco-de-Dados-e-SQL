/* ENDERECO */

INSERT INTO ENDERECO VALUES('FLAMENGO','RJ',1)
INSERT INTO ENDERECO VALUES('MORUMBI','SP',2)
INSERT INTO ENDERECO VALUES('CENTRO','MG',4)
INSERT INTO ENDERECO VALUES('CENTRO','SP',6)
GO

/* CRIANDO A TABELA TELEFONES 1 X N */
CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY IDENTITY,
	TIPO CHAR(3) NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_ALUNO INT,
	CHECK (TIPO IN ('RES','COM','CEL'))
)
GO

INSERT INTO TELEFONE VALUES('CEL','7899889',1)
INSERT INTO TELEFONE VALUES('RES','4325444',1)
INSERT INTO TELEFONE VALUES('COM','4354354',2)
INSERT INTO TELEFONE VALUES('CEL','2344556',2)
GO

SELECT * FROM ALUNO
GO

SELECT * FROM TELEFONE
GO
/*  PEGAR DATA ATUAL */
SELECT GETDATE()
GO

/* CLAUSULA AMBIGUA 
Eu utilizo o ON porque o WHERE é uma clausula de seleção
de conjunto e utiliza tabela verdade
JOIN é com ON
CLAUSULA AMBIGUA ocorre quando eu tenho duas ou mais tabelas
que possuem um campo que é uma chave extrangeira, que tenha
o mesmo nome e faça referencia a mesma tabela, nesse caso IDALUNO

Colocar ALUNO A, TELEFONE T e ENDERECO E chama ponteiramento */

SELECT A.NOME, T.TIPO, T.NUMERO, E.BAIRRO, E.UF
FROM ALUNO A INNER JOIN TELEFONE T
ON A.IDALUNO = T.ID_ALUNO
INNER JOIN ENDERECO E
ON A.IDALUNO = E.ID_ALUNO
GO

/* UM POUCO MAIS SOBRE JOIN 
Para trazer todos os registros da tabela a esquerda
use LEFT JOIN

Para trazer todos os registros da tabela a direita
use RIGHT JOIN
*/


/* IFNULL */

SELECT  A.NOME, 
		ISNULL(T.TIPO, 'SEM') AS 'TIPO', 
		ISNULL(T.NUMERO,'NUMERO') AS 'TELEFONE', 
		E.BAIRRO, E.UF
FROM ALUNO A LEFT JOIN TELEFONE T
ON A.IDALUNO = T.ID_ALUNO
INNER JOIN ENDERECO E
ON A.IDALUNO = E.ID_ALUNO
GO
